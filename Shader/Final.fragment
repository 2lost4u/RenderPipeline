#version 130


#include "Includes/Configuration.include"
#include "Includes/PositionReconstruction.include"

in vec2 texcoord;

uniform sampler2D velocityTex;
uniform sampler2D colorTex;
uniform sampler2D depthTex;

void main() {




    const float motionBlurFactor = 2.5;
    vec2 pixelVelocity = texture(velocityTex, texcoord).xy / 255.0 * motionBlurFactor;

    float pixelZ = texture(depthTex, texcoord);
    float pixelLinearZ = getLinearZFromZ(pixelZ);
    vec2 screenSize = vec2(textureSize(colorTex, 0)); 
    // pixelVelocity = vec2(0.01,0.005)*0.25;

    float dofFactor = 0.0;
    dofFactor = (pixelLinearZ-50.0) / ndcFar * 100.0;

       
    vec3 result;

    // Motion blur
    vec3 motionResult = vec3(0);
    float speed = length(pixelVelocity * screenSize);
    const int nSamples = MOTION_BLUR_SAMPLES;
    for (int i = 1; i < nSamples; i++) {
        vec2 offset = pixelVelocity * motionBlurFactor * (float(i) / float(nSamples - 1) - 0.5);
        motionResult += texture(colorTex, texcoord + offset).rgb;
    }
    motionResult /= nSamples-1;

    result = vec3(motionResult);


    result = vec3(texture(colorTex, texcoord).rgb);
    // result = vec3(dofFactor);



    gl_FragColor = vec4(result, 1.0);
}