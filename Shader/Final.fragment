#version 130


#include "Includes/Configuration.include"
#include "Includes/PositionReconstruction.include"


in vec2 texcoord;

uniform sampler2D velocityTex;
uniform sampler2D colorTex;
uniform sampler2D depthTex;

uniform float motionBlurFactor;

void main() {

    vec3 result;
    
    #ifdef USE_MOTION_BLUR
        vec2 pixelVelocity = texture(velocityTex, texcoord).xy / 255.0 * motionBlurFactor * 0.8;

        // float pixelZ = texture(depthTex, texcoord);
        // float pixelLinearZ = getLinearZFromZ(pixelZ);
        vec2 screenSize = vec2(textureSize(colorTex, 0)); 
        // pixelVelocity = vec2(0.01,0.005)*0.25;

        // float dofFactor = 0.0;
        // dofFactor = (pixelLinearZ-50.0) / ndcFar * 100.0;           

        // Motion blur
        vec3 motionResult = vec3(0);
        
        for (int i = 1; i < MOTION_BLUR_SAMPLES; i++) {
            vec2 offset = pixelVelocity * motionBlurFactor * (float(i) / float(MOTION_BLUR_SAMPLES - 1) - 0.5);
            motionResult += texture(colorTex, texcoord + offset).rgb;
        }
        motionResult /= MOTION_BLUR_SAMPLES-1;

        result = vec3(motionResult);
    #else
        result = texture(colorTex, texcoord).rgb;
    #endif


    gl_FragColor = vec4(result, 1.0);
}