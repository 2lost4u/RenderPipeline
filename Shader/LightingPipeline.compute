#version 430

layout (rgba8) writeonly uniform image2D destination;

layout (rgba16f) readonly uniform image2D target0;


uniform float osg_FrameTime;


layout (local_size_x = 32, local_size_y = 16) in;

void main() {
    float roll = 0.0;

    ivec2 storePos = ivec2(gl_GlobalInvocationID.xy);

    float localCoef = length(vec2(ivec2(gl_LocalInvocationID.xy)-8)/8.0);
    float globalCoef = sin(float(gl_WorkGroupID.x+gl_WorkGroupID.y)*0.1 + roll)*0.5;

    vec2 radial = gl_LocalInvocationID.xy / vec2(32.0);
    float radialFactor = length(abs(radial - vec2(0.5) ) * 2.0);


    float borderFactor = 0.0;

    if (gl_LocalInvocationID.x == 0 || gl_LocalInvocationID.y == 0) 
        borderFactor = 1.0;

    // (1.0-globalCoef*localCoef

    // memoryBarrier();

    // memoryBarrierShared();
    // memoryBarrierImage();
    // memoryBarrierAtomicCounter();
    // // barrier();

    // vec4 oldColor = texture(target0, gl_GlobalInvocationID.xy / vec2(1600, 928));
    vec4 oldColor = imageLoad(target0, storePos);

    vec4 result = vec4(oldColor);

    result.xyz += vec3(1,1,0) * borderFactor;

    // imageStore(destination, storePos, vec4(1,0,1, 0));
    imageStore(destination, storePos, vec4(result) );


}