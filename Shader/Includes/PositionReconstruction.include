

uniform mat4 trans_clip_of_camera_to_render;

const float ndcNear = 1.0;
const float ndcFar = 10000.0;
const float ndcA = ndcNear + ndcFar;
const float ndcB = ndcNear - ndcFar;
const float ndcC = 2.0 * ndcNear * ndcFar;

float getZFromNdc(vec3 ndcPos) {
  float d = ndcPos.z * ndcB;
  return (ndcC / (ndcA+d));
}

vec3 calculateSurfacePos(float z, vec2 tcoord) {

  vec3 ndcPos = vec3(tcoord.xy, z);
  ndcPos.xyz -= 0.5;
  ndcPos.xyz *= 2.0;
    
  vec4 clipPos = vec4(0);
  clipPos.w = getZFromNdc(ndcPos);

  clipPos.xyz = ndcPos * clipPos.w;
 
  vec3 surfacePosition = (trans_clip_of_camera_to_render * clipPos).xyz;
  return surfacePosition;
}


