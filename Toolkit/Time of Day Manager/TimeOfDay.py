
from DayProperty import DayProperty
from direct.stdpy.file import open

class TimeOfDay:

    """ This class manages the time of day settings. It has a list of all
    available properties and can interpolate between them """

    def __init__(self):
        """ Creates a new time of day instance. Remember to call load() before
        using this instance """
        self._createProperties()

    def _createProperties(self):
        """ Internal method to populate the property list """
        p = {}

        p['test'] = DayProperty("Test Property", "float", 0.0, 1.0, 0.2, """
            This is a test value """)

        p['test2'] = DayProperty("Test Property 2", "float", 0.0, 1.0, 0.4, """
            This is another test value """)

        p['test3'] = DayProperty("Test Property 3", "float", 0.0, 1.0, 0.6, """
            This is even another test value """)

        self.properties = p

    def getProperties(self):
        """ Returns all properties """
        return self.properties

    def getProperty(self, prop):
        """ Returns a property by id """
        return self.properties[prop]

    def load(self, filename):
        """ Loads the property values from <filename> """
        raise NotImplementedError("todo")

    def writeDefaultFile(self, dest):
        """ Writes the default property file to a given location """
        output = "# Autogenerated by Time of Day Manager\n"
        output += "# Do not edit! Your changes will be lost.\n"

        for propid, prop in self.properties.items():
            output += propid + " [" + ",".join([str(i) for i in prop.values ]) + "]\n"

        with open(dest, "w") as handle:
            handle.write(output)    






